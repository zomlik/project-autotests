name: All Autotests

on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Clone Taiga Docker repository
        run: git clone https://github.com/taigaio/taiga-docker.git

      - name: Install Taiga server
        run: |
          cd taiga-docker
          git checkout stable
          sed -i '/&default-back-environment/,/^$/!b;/^$/i \  PUBLIC_REGISTER_ENABLED: "True"' docker-compose.yml
          sed -i '/taiga-front:/,/TAIGA_SUBPATH:/!b;/TAIGA_SUBPATH:/a \      PUBLIC_REGISTER_ENABLED: "true"' docker-compose.yml
          ./launch-all.sh
          timeout 120s bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:9000/api/v1/)" != "200" ]]; do sleep 5; done' || false

      - name: Create Super User
        run: |
            cd taiga-docker
            ./taiga-manage.sh shell <<EOF
            from django.contrib.auth import get_user_model
            User = get_user_model()
            User.objects.create_superuser("${{ vars.SUPER_USER_USERNAME }}", "${{ vars.SUPER_USER_EMAIL }}", "${{ secrets.SUPER_USER_PASSWORD }}")
            EOF

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          playwright install chromium

      - name: Run Tests
        env:
          HTTP_CLIENT.BASE_URL: "http://localhost:9000/api/v1"
          HTTP_CLIENT.TIMEOUT: 100

          PLAYWRIGHT.BASE_URL: "http://localhost:9000"
          PLAYWRIGHT.HEADLESS: True

          SUPER_USER.USERNAME: ${{ vars.SUPER_USER_USERNAME }}
          SUPER_USER.EMAIL: ${{ vars.SUPER_USER_EMAIL }}
          SUPER_USER.PASSWORD: ${{ secrets.SUPER_USER_PASSWORD }}

        run: pytest --alluredir allure-results
      - name: Add Allure Env
        working-directory: allure-results
        if: always()
        run: |
           echo GIT_COMMIT_ID=${{ github.sha }} >> environment.properties
           echo GIT_COMMIT_TIME=$(git show -s --format=%ci HEAD) >> environment.properties
        continue-on-error: true

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Generates Allure Report with history
        uses: simple-elf/allure-report-action@v1.12
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
