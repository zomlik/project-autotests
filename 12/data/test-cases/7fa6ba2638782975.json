{"uid":"7fa6ba2638782975","name":"Обновление действующего токена","fullName":"tests.api.auth.test_auth_api.TestAuth#test_refresh_token","historyId":"21990df0fb00487c974eec076bac29bb","time":{"start":1756880450560,"stop":1756880450661,"duration":101},"status":"skipped","statusMessage":"XFAIL Ошибка 401: Пользователь не авторизован\n\npydantic_core._pydantic_core.ValidationError: 2 validation errors for RefreshTokenResponseModel\nauth_token\n  Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nrefresh\n  Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"self = <test_auth_api.TestAuth object at 0x7f2609aa8560>\nget_user_session = UserFixture(request=PublicRegistryRequestModel(accepted_terms='true', email='reactions1861@live.com', full_name='Emeli...1d01'), auth=UserAuthData(email='reactions1861@live.com', username='revenue_1814', password='m=9I~5QD', type='normal'))\n\n    @allure.title(\"Обновление действующего токена\")\n    @pytest.mark.xfail(reason=\"Ошибка 401: Пользователь не авторизован\")\n    def test_refresh_token(self, get_user_session):\n        response = public_users_client().refresh_token(get_user_session.auth)\n>       schema = RefreshTokenResponseModel.model_validate_json(response.text)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for RefreshTokenResponseModel\nE       auth_token\nE         Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       refresh\nE         Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntests/api/auth/test_auth_api.py:67: ValidationError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_verify_url","time":{"start":1756880449866,"stop":1756880449866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"base_url","time":{"start":1756880449866,"stop":1756880449866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"pytestconfig","time":{"start":1756880449866,"stop":1756880449866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"delete_output_dir","time":{"start":1756880449866,"stop":1756880449866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"get_user_session","time":{"start":1756880449913,"stop":1756880450313,"duration":400},"status":"passed","steps":[{"name":"Выполнение публичной регистрации пользователя","time":{"start":1756880449914,"stop":1756880450312,"duration":398},"status":"passed","steps":[{"name":"Выполнение POST-Запроса","time":{"start":1756880449915,"stop":1756880450312,"duration":397},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'auth/register'"},{"name":"json","value":"{'accepted_terms': 'true', 'email': 'reactions1861@live.com', 'full_name': 'Emeline Singleton', 'password': 'm=9I~5QD', 'type': 'public', 'username': 'revenue_1814'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"payload","value":"PublicRegistryRequestModel(accepted_terms='true', email='reactions1861@live.com', full_name='Emeline Singleton', password='m=9I~5QD', type='public', username='revenue_1814')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Проверка статус код равен 201","time":{"start":1756880450313,"stop":1756880450313,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"expected","value":"201"},{"name":"actual","value":"<HTTPStatus.CREATED: 201>"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Ошибка 401: Пользователь не авторизован\n\npydantic_core._pydantic_core.ValidationError: 2 validation errors for RefreshTokenResponseModel\nauth_token\n  Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing\nrefresh\n  Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\n    For further information visit https://errors.pydantic.dev/2.11/v/missing","statusTrace":"self = <test_auth_api.TestAuth object at 0x7f2609aa8560>\nget_user_session = UserFixture(request=PublicRegistryRequestModel(accepted_terms='true', email='reactions1861@live.com', full_name='Emeli...1d01'), auth=UserAuthData(email='reactions1861@live.com', username='revenue_1814', password='m=9I~5QD', type='normal'))\n\n    @allure.title(\"Обновление действующего токена\")\n    @pytest.mark.xfail(reason=\"Ошибка 401: Пользователь не авторизован\")\n    def test_refresh_token(self, get_user_session):\n        response = public_users_client().refresh_token(get_user_session.auth)\n>       schema = RefreshTokenResponseModel.model_validate_json(response.text)\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       pydantic_core._pydantic_core.ValidationError: 2 validation errors for RefreshTokenResponseModel\nE       auth_token\nE         Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\nE       refresh\nE         Field required [type=missing, input_value={'detail': 'Token is inva...ode': 'token_not_valid'}, input_type=dict]\nE           For further information visit https://errors.pydantic.dev/2.11/v/missing\n\ntests/api/auth/test_auth_api.py:67: ValidationError","steps":[{"name":"Обновление токена","time":{"start":1756880450561,"stop":1756880450660,"duration":99},"status":"passed","steps":[{"name":"Получение JSON-ответа после авторизации","time":{"start":1756880450561,"stop":1756880450653,"duration":92},"status":"passed","steps":[{"name":"Выполнение запроса на авторизацию","time":{"start":1756880450561,"stop":1756880450653,"duration":92},"status":"passed","steps":[{"name":"Выполнение POST-Запроса","time":{"start":1756880450561,"stop":1756880450653,"duration":92},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/auth'"},{"name":"json","value":"{'email': 'reactions1861@live.com', 'username': 'revenue_1814', 'password': 'm=9I~5QD', 'type': 'normal'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"payload","value":"UserAuthData(email='reactions1861@live.com', username='revenue_1814', password='m=9I~5QD', type='normal')"}],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"payload","value":"UserAuthData(email='reactions1861@live.com', username='revenue_1814', password='m=9I~5QD', type='normal')"}],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Выполнение POST-Запроса","time":{"start":1756880450653,"stop":1756880450660,"duration":7},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"url","value":"'/auth/refresh'"},{"name":"json","value":"{'refresh': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzU2OTY2ODUwLCJqdGkiOiJjOWZlMzAwY2ViNzM0NTJmYTk5YjBmNzg0ZjM1M2I1NyIsInVzZXJfaWQiOjZ9.SRxpIKiMoUxjB-P92p-dioEjHwKJg9LhIA6JXRwBR0A'}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[{"name":"user_data","value":"UserAuthData(email='reactions1861@live.com', username='revenue_1814', password='m=9I~5QD', type='normal')"}],"shouldDisplayMessage":false,"stepsCount":4,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"731b269008d63107","name":"log","source":"731b269008d63107.txt","type":"text/plain","size":401},{"uid":"bd1f5b193afa247c","name":"stderr","source":"bd1f5b193afa247c.txt","type":"text/plain","size":434}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":2,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"epic","value":"Пользователи"},{"name":"feature","value":"Auth"},{"name":"tag","value":"users"},{"name":"tag","value":"auth"},{"name":"tag","value":"api"},{"name":"parentSuite","value":"tests.api.auth"},{"name":"suite","value":"test_auth_api"},{"name":"subSuite","value":"TestAuth"},{"name":"host","value":"pkrvm7jw40e0xgp"},{"name":"thread","value":"6031-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.api.auth.test_auth_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["auth","api","users"]},"source":"7fa6ba2638782975.json","parameterValues":[]}